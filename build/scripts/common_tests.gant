import static org.jetbrains.jps.idea.IdeaProjectLoader.guessHome

includeTargets << new File("${guessHome(this)}/build/scripts/utils.gant")

requireProperty("out", "$home/out/classes")

target(compile: "Compile project") {
  loadProject()
  project.builder.useInProcessJavac = true
  project.targetFolder = out
  ant.delete(dir: "$home/reports")
  project.clean()
  project.makeAll()
}

def pass(String prop) {
  if (isDefined(prop)) {
    ant.jvmarg(value: "-D$prop=${p(prop)}")
  }
}

target('default': 'The default target') {
  depends(compile)

  ant.junit(fork: "yes", showoutput: "true", logfailedtests:false) {
    pass("idea.test.group")
    pass("idea.test.patterns")
    pass("idea.fast.only")
    pass("teamcity.build.tempDir")
    pass("teamcity.tests.recentlyFailedTests.file")
    jvmarg (value: "-Didea.platform.prefix=Idea")
    jvmarg (value: "-Djava.system.class.loader=com.intellij.util.lang.UrlClassLoader")

    System.getProperties().entrySet().each {
      if (it.key.startsWith("pass.")) {
        def trimmed = it.key.substring("pass.".length());
        jvmarg(value: "-D${trimmed}=${it.value}");
      };
    }

    commonJvmArgs().each { jvmarg(value: it) }

    if (isDefined("jvm_args")) {
      jvm_args.each { jvmarg(value: it) }
    }

    classpath {
      this["community-main"].testRuntimeClasspath().each {
        pathelement(location: it)
      }
      pathelement(location: "${jdkHome}/lib/tools.jar")
    }

    testcases.each {
      test (name: it)
    }
  }
}
